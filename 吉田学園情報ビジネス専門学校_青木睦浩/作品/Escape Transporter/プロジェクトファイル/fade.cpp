//=============================================================================
//
// フェード処理 [fade.cpp]
// Author : 小笠原　彪我
//
//=============================================================================
//=============================================================================
//インクルードファイル
//=============================================================================
#include "fade.h"
#include "manager.h"
#include "game.h"

//=============================================================================
// 静的メンバ変数宣言
//=============================================================================

//=============================================================================
// コンストラクタ
//=============================================================================
CFade::CFade(int nPriority) : CScene2D(nPriority)
{
	m_color = D3DXCOLOR(0.0f, 0.0f, 0.0f, 0.0f);
	m_fade = FADE_NONE;
}
//=============================================================================
// デストラクタ
//=============================================================================
CFade::~CFade()
{
}
//=============================================================================
// 初期化処理
//=============================================================================
HRESULT CFade::Init(void)
{
	m_color = D3DXCOLOR(0.0f, 0.0f, 0.0f, 1.0f);
	m_fade = FADE_IN;
	CScene2D::Init();
	SetObjType(OBJTYPE_FADE);

	return S_OK;
}
//=============================================================================
// 終了処理
//=============================================================================
void CFade::Uninit(void)
{
	CScene2D::Uninit();
}
//=============================================================================
// 更新処理
//=============================================================================
void CFade::Update(void)
{
	if (m_fade != FADE_NONE)
	{
		if (m_fade == FADE_IN)
		{
			m_color.a -= 0.05f;
			if (m_color.a <= 0.0f)
			{
				m_color.a = 0.0f;
				m_fade = FADE_NONE;
			}
		}
		else if (m_fade == FADE_OUT)
		{
			m_color.a += 0.05f;
			if (m_color.a >= 1.0f)
			{
				m_color.a = 1.0f;
				m_fade = FADE_IN;
				
				CManager::SetMode(m_mode);	//モードの設定
			}
		}
		CScene2D::SetColor(m_color);
	}
}
//=============================================================================
// 描画処理
//=============================================================================
void CFade::Draw(void)
{
	CScene2D::Draw();
}
//=============================================================================
// フェードを生成
//=============================================================================
CFade *CFade::Create(D3DXVECTOR3 pos, D3DXVECTOR3 size, CManager::MODE mode)
{
	CFade *pFade = NULL;

	pFade = new CFade;
	if (pFade != NULL)
	{
		pFade->Init();
		pFade->SetPosition(pos, size);
		pFade->m_fade = FADE_OUT;
		pFade->m_mode = mode;
		pFade->m_color = D3DXCOLOR(0.0f, 0.0f, 0.0f, 0.0f);
	}
	return pFade;
}
//=============================================================================
// フェード設定
//=============================================================================
void CFade::SetFade(CManager::MODE modenext)
{
	m_fade = FADE_OUT;
	m_mode = modenext;
	m_color = D3DXCOLOR(0.0f, 0.0f, 0.0f, 0.0f);
}
//=============================================================================
// フェード情報取得
//=============================================================================
CFade::FADE CFade::GetFade(void)
{
	return m_fade;
}