//=============================================================================
//
// タイトルの処理 [title.cpp]
// Author : 川村優斗
//
//=============================================================================

//*****************************************************************************
// インクルードファイル
//*****************************************************************************
#include"tutorial.h"
#include"keyboard.h"
#include"manager.h"
#include"fade.h"
#include"ui.h"
#include"bg.h"

//*****************************************************************************
// 静的メンバ変数宣言
//*****************************************************************************
CUI *CTutorial::m_pUI[3] = {};

//=============================================================================
// コンストラクタ
//=============================================================================
CTutorial::CTutorial()
{
	m_dwCurrentTime = 0;
	// 現在の時刻を取得
	m_dwExecLastTime = timeGetTime();
	m_fade = false;
	m_nSelect = 0;
}

//=============================================================================
// デストラクタ
//=============================================================================
CTutorial::~CTutorial()
{
}

//=============================================================================
// 初期化処理
//=============================================================================
HRESULT CTutorial::Init(void)
{
	// 背景作る
	m_pUI[0] = CUI::Create(D3DXVECTOR3(BG_X, BG_Y, 0.0f), D3DXVECTOR3(0.0f, 0.0f, 0.0f), D3DXVECTOR3(BG_WIDTH, BG_HEIGHT, 0.0f), CTexture::TEXTURETYPE_TUTORIAL1);

	return S_OK;
}

//=============================================================================
// 終了処理
//=============================================================================
void CTutorial::Uninit(void)
{
	Release();
}

//=============================================================================
// 更新処理
//=============================================================================
void CTutorial::Update(void)
{
	// フェードの取得
	CFade *pFade = CManager::GetFade();

	// キーボードの取得
	CInputKeyboard *pInputKeyboard = CManager::GetInputKeyboard();

	if ((pInputKeyboard->GetTrigger(DIK_D) == true) || (pInputKeyboard->GetTrigger(DIK_RIGHT) == true) || (pInputKeyboard->GetTrigger(DIK_SPACE) == true) || (pInputKeyboard->GetTrigger(DIK_RETURN) == true))
	{
		if (m_fade == false)
		{
			pFade->SetFade(CManager::MODE_MENU);
			m_fade = true;
		}
	}
}

//=============================================================================
// 描画処理
//=============================================================================
void CTutorial::Draw(void)
{
}

//=============================================================================
// タイトルの生成
//=============================================================================
CTutorial * CTutorial::Create(void)
{
	// タイトルのインスタンス生成
	CTutorial *pTutorial = new CTutorial;

	// タイトルの準備
	if (pTutorial != NULL)
	{
		pTutorial->Init();
	}
	return pTutorial;
}
