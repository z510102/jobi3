//=============================================================================
//
// ポリゴンクラス [polygon.h]
// Author : 小笠原　彪我
//
//=============================================================================
//=============================================================================
//インクルードファイル
//=============================================================================
#include "3dpolygon.h"
#include "keyboard.h"
#include "game.h"
//=============================================================================
// 静的メンバ変数宣言
//=============================================================================
LPDIRECT3DTEXTURE9 C3DPolygon::m_pTexture = NULL;	// テクスチャへのポインタ

//=============================================================================
// コンストラクタ
//=============================================================================
C3DPolygon::C3DPolygon()
{
	// メンバ変数のクリア
	memset(m_pos, 0, sizeof(D3DXVECTOR3));			// 位置
	memset(m_move, 0, sizeof(D3DXVECTOR3));			// 移動量
	memset(m_scale, 0, sizeof(D3DXVECTOR2));		// 大きさ
	m_color = D3DXCOLOR(1.0f, 1.0f, 1.0f, 1.0f);	// 色
	m_bUninit = false;								// 破棄

}
//=============================================================================
// デストラクタ
//=============================================================================
C3DPolygon::~C3DPolygon()
{
}
//=============================================================================
// 初期化処理
//=============================================================================
HRESULT C3DPolygon::Init(void)
{
	CScene3D::Init();

	return S_OK;
}

//=============================================================================
// 終了処理
//=============================================================================
void C3DPolygon::Uninit(void)
{
	CScene3D::Uninit();
}

//=============================================================================
// 更新処理
//=============================================================================
void C3DPolygon::Update(void)
{
	//SetPosition(m_pos, m_scale);
}

//=============================================================================
// 描画処理
//=============================================================================
void C3DPolygon::Draw(void)
{
	CScene3D::Draw();
}
//=============================================================================
// プレイヤーの生成
//=============================================================================
C3DPolygon *C3DPolygon::Create(D3DXVECTOR3 pos, D3DXVECTOR3 rot, D3DXVECTOR3 scale)
{
	C3DPolygon *pPlayer;
	pPlayer = new C3DPolygon;

	if (pPlayer != NULL)
	{
		pPlayer->Init();
		pPlayer->m_pos = pos;
		pPlayer->m_rot = rot;
		pPlayer->m_scale = scale;
		pPlayer->SetPosition(pos, scale);
	}

	return pPlayer;
}
