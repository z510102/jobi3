//=============================================================================
//
// ポジション処理 [position.cpp]
// Author : 青木睦浩
//
//=============================================================================

#include "position.h"
#include "manager.h"

//=============================================================================
// 静的メンバ変数宣言
//=============================================================================
LPDIRECT3DTEXTURE9 CPosition::m_pTexture = NULL;

//=============================================================================
// コンストラクタ
//=============================================================================
CPosition::CPosition(int nPriority) : CScene2D(nPriority)
{
	// 変数をクリア
	memset(&m_color, 0, sizeof(D3DXCOLOR));
}

//=============================================================================
// デストラクタ
//=============================================================================
CPosition::~CPosition()
{

}

//=============================================================================
// 2Dポリゴンのテクスチャ読み込み
//=============================================================================
HRESULT CPosition::Load(void)
{
	// デバイスを取得
	LPDIRECT3DDEVICE9 pDevice;
	pDevice = CManager::GetRenderer()->GetDevice();

	// テクスチャの読み込み
	D3DXCreateTextureFromFile(pDevice,						 // デバイスへのポインタ
							  "data/TEXTURE/position.png",	 // 読み込むファイル名
							  &m_pTexture);					 // 読み込むメモリ

	return S_OK;
}

//=============================================================================
// 2Dポリゴンのテクスチャ破棄
//=============================================================================
void CPosition::Unload(void)
{
	// テクスチャの破棄
	if (m_pTexture != NULL)
	{
		m_pTexture->Release();
		m_pTexture = NULL;
	}
}

//=============================================================================
// 2Dポリゴンの生成処理
//=============================================================================
CPosition *CPosition::Create(D3DXVECTOR3 pos, D3DXCOLOR color)
{
	// ポインタ
	CPosition *pPosition;

	// メモリを確保
	pPosition = new CPosition (PRIORITY_POSITION);

	if (pPosition != NULL)
	{
		// 処理へ
		pPosition->Init(pos);
		pPosition->SetSize(340, 35);
		pPosition->BindTexture(m_pTexture);

		// メンバへ情報を渡す
		pPosition->m_color = color;
	}

	// ポインタを戻り値へ返す
	return pPosition;
}

//=============================================================================
// 2Dポリゴンの初期化処理
//=============================================================================
HRESULT CPosition::Init(D3DXVECTOR3 pos)
{
	// Scene2Dの初期化処理へ
	CScene2D::Init(pos);

	// オブジェクトの種類を決める
	SetObjType(OBJTYPE_POSITION);

	return S_OK;
}

//=============================================================================
// 2Dポリゴンの終了処理
//=============================================================================
void CPosition::Uninit(void)
{
	// Scene2Dの終了処理へ
	CScene2D::Uninit();
}

//=============================================================================
// 2Dポリゴンの更新処理
//=============================================================================
void CPosition::Update(void)
{
	// Scene2Dの更新処理へ
	CScene2D::Update();
}

//=============================================================================
// 2Dポリゴンの描画処理
//=============================================================================
void CPosition::Draw(void)
{
	// Scene2Dの描画処理へ
	CScene2D::Draw();

	// 色の設定処理へ
	SetColor(m_color);
}