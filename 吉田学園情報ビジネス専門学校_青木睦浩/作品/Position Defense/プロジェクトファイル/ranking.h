//=============================================================================
//
// ランキング処理 [ranking.h]
// Author : 青木睦浩
//
//=============================================================================
#ifndef _RANKING_H_
#define _RANKING_H_

#include "main.h"
#include "scene2D.h"

//*****************************************************************************
// マクロ定義
//*****************************************************************************
#define MAX_RANKING (6)

//*****************************************************************************
// 前方宣言
//*****************************************************************************
class CScore;

//*****************************************************************************
// ランキングクラス
//*****************************************************************************
class CRanking : public CScene
{
public:
	CRanking(int nPriority = 0);									// デフォルトコンストラクタ
	~CRanking();													// デストラクタ

	// メンバ関数
	static CRanking *Create(D3DXVECTOR3 pos, D3DXVECTOR2 size);		// 生成処理

	HRESULT Init(D3DXVECTOR3 pos);									// 初期化処理
	void Uninit(void);												// 終了処理
	void Update(void);												// 更新処理
	void Draw(void);												// 描画処理

private:
	// メンバ変数
	static CScore *m_apScore[MAX_RANKING];							// ランキングのポインタ配列
	int m_aScore[MAX_RANKING];										// スコアの配列
	int m_nScore;													// スコア
	D3DXVECTOR3 m_pos;												// 位置
	D3DXVECTOR2 m_size;												// サイズ
};

#endif // !_RANKING_H_