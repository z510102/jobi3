//=============================================================================
//
// フラッシュグレネード所持数処理 [f_g_possession.cpp]
// Author : 青木睦浩
//
//=============================================================================

#include "f_g_possession.h"
#include "number.h"

//=============================================================================
// コンストラクタ
//=============================================================================
CF_G_Possession::CF_G_Possession(int nPriority) : CScene(nPriority)
{
	// 変数をクリア
	memset(&m_pNumber, 0, sizeof(CNumber));
	m_nF_G_Possession = 0;
	memset(&m_pos, 0, sizeof(D3DXVECTOR3));
}

//=============================================================================
// デストラクタ
//=============================================================================
CF_G_Possession::~CF_G_Possession()
{

}

//=============================================================================
// フラッシュグレネード所持数の生成
//=============================================================================
CF_G_Possession *CF_G_Possession::Create(D3DXVECTOR3 pos)
{
	// ポインタ
	CF_G_Possession *pF_G_Possession;

	// メモリを確保
	pF_G_Possession = new CF_G_Possession(PRIORITY_NUMBER);

	if (pF_G_Possession != NULL)
	{
		// メンバへ情報を渡す
		pF_G_Possession->m_size = D3DXVECTOR2(30, 40);

		// Initへ
		pF_G_Possession->Init(pos);
	}

	// ポインタを戻り値へ返す
	return pF_G_Possession;
}

//=============================================================================
// フラッシュグレネード所持数の初期化処理
//=============================================================================
HRESULT CF_G_Possession::Init(D3DXVECTOR3 pos)
{
	// ナンバーを生成
	m_pNumber = CNumber::Create(D3DXVECTOR3(pos.x + m_size.x, pos.y, 0.0f), m_size.x, m_size.y);

	// 所持数を設定
	m_nF_G_Possession = 3;

	return S_OK;
}

//=============================================================================
// フラッシュグレネード所持数の終了処理
//=============================================================================
void CF_G_Possession::Uninit(void)
{
	//頂点バッファの破棄
	if (m_pNumber != NULL)
	{
		m_pNumber->Uninit();
		m_pNumber = NULL;

		// メモリを解放
		delete m_pNumber;
	}

	// オブジェクトの破棄
	Release();
}

//=============================================================================
// フラッシュグレネード所持数の更新処理
//=============================================================================
void CF_G_Possession::Update(void)
{
	// 桁数分加算されたスコアを計算する
	m_pNumber->SetNumber(m_nF_G_Possession % (int)pow(10, 1));

	// 所持数が3以上ある場合
	if (m_nF_G_Possession >= 3)
	{
		// 3で停止する
		m_nF_G_Possession = 3;

		// ナンバーを設定
		m_pNumber->SetNumber(3);

		// カラーを設定
		m_pNumber->SetColor(0, 255, 0, 255);
	}

	// 所持数が2以下又は1以上ある場合
	if (m_nF_G_Possession <= 2 && m_nF_G_Possession >= 1)
	{
		// カラーを設定
		m_pNumber->SetColor(255, 255, 255, 255);
	}

	// 所持数が０以下になったら
	if (m_nF_G_Possession <= 0)
	{
		// ０で停止する
		m_nF_G_Possession = 0;

		// ナンバーを設定
		m_pNumber->SetNumber(0);

		// カラーを設定
		m_pNumber->SetColor(255, 0, 0, 255);
	}
}

//=============================================================================
// フラッシュグレネード所持数の描画処理
//=============================================================================
void CF_G_Possession::Draw(void)
{
	// ナンバーの描画処理へ
	m_pNumber->Draw();
}

//=============================================================================
// フラッシュグレネード所持数の設定処理
//=============================================================================
void CF_G_Possession::SetF_G_Ppssession(int nG_Ppssession)
{
	// 引数の値をメンバへ渡す
	m_nF_G_Possession = nG_Ppssession;
}

//=============================================================================
// フラッシュグレネード所持数の減算処理
//=============================================================================
void CF_G_Possession::SubF_G_Ppssession(int nValue)
{
	// 引数の値をメンバへ渡す
	m_nF_G_Possession -= nValue;
}

//=============================================================================
// フラッシュグレネード所持数の取得処理
//=============================================================================
int CF_G_Possession::GetF_G_Ppssession(void)
{
	// メンバを戻り値へ返す
	return m_nF_G_Possession;
}

//=============================================================================
// フラッシュグレネード所持数の加算処理
//=============================================================================
void CF_G_Possession::AddF_G_Ppssession(int nValue)
{
	// メンバと引数を足してメンバへ渡す
	m_nF_G_Possession += nValue;
}
