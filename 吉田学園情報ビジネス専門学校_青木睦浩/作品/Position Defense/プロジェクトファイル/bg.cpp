//=============================================================================
//
// 背景処理 [bg.cpp]
// Author : 青木睦浩
//
//=============================================================================

#include "bg.h"
#include "manager.h"

//=============================================================================
// 静的メンバ変数宣言
//=============================================================================
LPDIRECT3DTEXTURE9 CBg::m_pTexture = NULL;

//=============================================================================
// コンストラクタ
//=============================================================================
CBg::CBg(int nPriority) : CScene(nPriority)
{
	// 変数をクリアする
	m_pScene2D = NULL;
	memset(&m_Pos, 0, sizeof(D3DXVECTOR3));
	m_nPriority = nPriority;
}

//=============================================================================
// デストラクタ
//=============================================================================
CBg::~CBg()
{

}

//=============================================================================
// 背景の読み込み
//=============================================================================
HRESULT CBg::Load(void)
{
	// デバイスを取得
	LPDIRECT3DDEVICE9 pDevice;
	pDevice = CManager::GetRenderer()->GetDevice();

	// テクスチャの読み込み
	D3DXCreateTextureFromFile(pDevice,					// デバイスへのポインタ
							  "data/TEXTURE/bg.png",	// 読み込むファイル名
							  &m_pTexture);				// 読み込むメモリ

	return S_OK;
}

//=============================================================================
// 背景の破棄
//=============================================================================
void CBg::Unload(void)
{
	// テクスチャの破棄
	if (m_pTexture != NULL)
	{
		m_pTexture->Release();
		m_pTexture = NULL;
	}
}

//=============================================================================
// 2Dポリゴンの生成
//=============================================================================
CBg *CBg::Create(void)
{
	// ポインタ
	CBg *pBg;

	// メモリを確保
	pBg = new CBg (PRIORITY_BG);

	if (pBg != NULL)
	{
		// BGの初期化へ
		pBg->Init(D3DXVECTOR3(SCREEN_WIDTH / 2.8f, SCREEN_HEIGHT / 2, 0.0f));
	}

	// ポインタを戻り値へ返す
	return pBg;
}

//=============================================================================
// 2Dポリゴンの初期化処理
//=============================================================================
HRESULT CBg::Init(D3DXVECTOR3 pos)
{
	// 生成
	m_pScene2D = new CScene2D(m_nPriority);

	if (m_pScene2D != NULL)
	{
		// 初期化
		m_pScene2D->Init(pos);

		// サイズの設定
		m_pScene2D->SetSize(SCREEN_WIDTH / 2.8f, SCREEN_HEIGHT / 2);

		// テクスチャ割当
		m_pScene2D->BindTexture(m_pTexture);
	}

	// オブジェクトの種類を決める
	SetObjType(OBJTYPE_BG);

	return S_OK;
}

//=============================================================================
// 2Dポリゴンの終了処理
//=============================================================================
void CBg::Uninit(void)
{
	// 背景の破棄
	if (m_pScene2D != NULL)
	{
		m_pScene2D->Uninit();
		m_pScene2D = NULL;
	}

	// オブジェクトの破棄
	Release();
}

//=============================================================================
// 2Dポリゴンの更新処理
//=============================================================================
void CBg::Update(void)
{

}

//=============================================================================
// 2Dポリゴンの描画処理
//=============================================================================
void CBg::Draw(void)
{

}